<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.myTime = 30.0
global.showTime = global.myTime 
time = 0;
increase = 1;
                            



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Timer
if global.myTime &gt; 0
{
    global.myTime = global.myTime - delta_time/1000000
}
else
{
    global.myTime = 0
    //instance_create(x,y,obj_dialogue3);
    //instance_create(0,0,obj_gameover);   
   
}

//Showing Timer
global.showTime = ceil(global.myTime)

//Destroy Timer
if instance_exists(obj_gameover)
{
    instance_destroy();
}

if global.get_mission = 1
{
    global.myTime = 30;
}

//sound

                            if global.showTime = 10.0
                            {
                            if !audio_is_playing(snd_timer) { audio_play_sound(snd_timer, 1, false) }
                            }
                            
                            if global.showTime = 9.0
                            {
                            if !audio_is_playing(snd_timer) { audio_play_sound(snd_timer, 1, false) }
                            }
                            
                            if global.showTime = 8.0
                            {
                            if !audio_is_playing(snd_timer) { audio_play_sound(snd_timer, 1, false) }
                            }
                            
                            if global.showTime = 7.0
                            {
                            if !audio_is_playing(snd_timer) { audio_play_sound(snd_timer, 1, false) }
                            }
                            
                            if global.showTime = 6.0
                            {
                            if !audio_is_playing(snd_timer) { audio_play_sound(snd_timer, 1, false) }
                            }
                            
                            if global.showTime = 5.0
                            {
                            if !audio_is_playing(snd_timer) { audio_play_sound(snd_timer, 1, false) }
                            }
                            
                            if global.showTime = 4.0
                            {
                            if !audio_is_playing(snd_timer) { audio_play_sound(snd_timer, 1, false) }
                            }
                            
                            if global.showTime = 3.0
                            {
                            if !audio_is_playing(snd_timer) { audio_play_sound(snd_timer, 1, false) }
                            }
                            
                            if global.showTime = 2.0
                            {
                            if !audio_is_playing(snd_timer) { audio_play_sound(snd_timer, 1, false) }
                            }
                            
                            if global.showTime = 1.0
                            {
                            if !audio_is_playing(snd_timer) { audio_play_sound(snd_timer, 1, false) }
                            }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//increase values
time += increase;

//calculations
if(time &gt;= 25 || time &lt;= 0){increase = -increase}

if global.showTime &gt; 10
{ 
draw_set_font(fnt_light);
draw_set_color(c_white);
draw_text(view_wview/1.66, 795, string(global.showTime));
}
else
{
    draw_set_font(fnt_light);
    draw_set_color(c_red);
    draw_set_alpha(lerp(0,1,time/25));
    draw_text(view_wview/1.66, 795, string(global.showTime));
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
