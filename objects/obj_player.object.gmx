<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_large</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>obj_lifeform_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
audio_play_sound(snd_mission, 1, false);
global.on_mission = 0;
global.cargo = 0; 

image_speed = 1/3;
alarm[0] = 240;
image_index = spr_player_large;
image_angle = 90;

if (!instance_exists(obj_timer))
{
    instance_create(x, y, obj_timer);
}

//Particles Create
global.part1_sys = part_system_create();
global.part1 = part_type_create();
//Particle Explosion
global.P_System4 = part_system_create();
part_system_depth(global.P_System4,0); 
global.Particle4 = part_type_create(); 
global.Particle_emit4 = part_emitter_create(global.P_System4); 
//Particle Customisation 

//Emittter Location On Sprite

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    part_type_destroy(global.part1);
    part_system_destroy(global.part1_sys);
    part_type_destroy(global.Particle4);
    part_emitter_destroy(global.P_System4, global.Particle_emit4);
    part_system_destroy(global.P_System4);
    
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> audio_play_sound(snd_explode,10,false);
 
 if (global.life &gt; 0)
    {
        global.life -= 1;
        global.myTime = 60;
        instance_create(obj_hub_floor.x,obj_hub_floor.y+100,obj_player);
        
         if (!instance_exists(obj_delivery_zone))
        {
            instance_create(random(room_width),random(room_height),obj_delivery_zone);
        }
    }
    else
    {
        instance_create(0,0,obj_gameover);
    }
    
      instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_player_large

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

background_x[1] = view_xview[0]/30+2000;
background_x[2] = view_xview[0]/30+1000;
background_x[3] = view_xview[0]/30+5000;
background_x[4] = view_xview[0]/30+3000;
background_x[5] = view_xview[0]/20;
background_x[6] = view_xview[0]/20;
background_x[7] = view_xview[0]/30+6000;


background_y[1] = view_xview[0]/30+6000;
background_y[2] = view_xview[0]/30+2000;
background_y[3] = view_xview[0]/30+500;
background_y[4] = view_xview[0]/30+4000;
background_y[5] = view_xview[0]/20;
background_y[6] = view_xview[0]/20;
background_y[7] = view_xview[0]/30+4000;


hspd = speed;
speed = max(speed - 0.01, 0);

//Animate Sprite When moving

if keyboard_check(vk_up)
{ 
    sprite_index = spr_player_large_go; 
}
else
{
    sprite_index = spr_player_large;
}

if (!place_meeting(x, y, obj_blackholering))
    {
    //Particle System WHITE
    if keyboard_check(vk_up)
        {
            //Particle 
            part_system_depth(global.part1_sys,0);
            part_type_shape(global.part1,pt_shape_square);
            part_type_scale(global.part1,0.5,0.5); 
            part_type_size(global.part1,0.5,0.7,-0.005,0);
            part_type_alpha2(global.part1,1,0);
            part_type_direction(global.part1,0,359,0,0);
            part_type_gravity(global.part1,0.01,90);
            part_type_life(global.part1,room_speed,room_speed*3);
            part_type_blend(global.part1,0);
            part_type_colour2(global.part1,c_ltgray,c_white);
            part_type_speed(global.part1,0.1,0.5,0,0);
            var xpos = x + lengthdir_x(47, image_angle - 180);
            var ypos = y + lengthdir_y(47, image_angle - 180);
            part_particles_create(global.part1_sys, xpos - 5 + random(10), ypos - 5 + random(10), global.part1, irandom(50));
        }

    if keyboard_check(vk_space)
        {
            part_type_speed(global.part1,1,1.5,0,0);
        }
   
    }
//Particle Emitter Region    


    //part1_emit = part_emitter_create(part1_sys); 
    //part_emitter_region(part1_sys,part1_emit,x-10,x+10,y-10,y+10,ps_shape_line,ps_distr_gaussian);
    //part_emitter_burst(part1_sys,part1_emit,part1,irandom(50));

///GRAVITY  BLACKHOLE
if (instance_exists(obj_blackholebase))
{
    if  (point_distance(x, y, obj_blackholebase.x, obj_blackholebase.y) &lt; 400)
        {
            gravity=0.5
            gravity_direction=point_direction(x,y,obj_blackholebase.x,obj_blackholebase.y)
        }
    if  (point_distance(x, y, obj_blackholebase.x, obj_blackholebase.y) &gt; 400) 
        {
            gravity_direction=!point_direction(x,y,obj_blackholebase.x,obj_blackholebase.y)
            gravity=0
        }
}
//death
if (global.myTime = 0) 
{
     if (instance_exists(obj_dialogue5))
    {
    with (obj_dialogue5) instance_destroy();
    }
    
    with (obj_dialogue) instance_destroy();
    audio_play_sound(snd_explode,10,false);
   
    if (global.life &gt; 0)
    {
        obj_asteroid.alarm[0] = 120;
        global.life -= 1;
        global.multiplier = 75;
        global.successCount = 0;
        global.multiplierhud = 1;

    }
    else
    {
        instance_create(0,0,obj_gameover);
    }

    instance_destroy();
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blackholebase">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0;
image_angle += 10;

if image_xscale &lt; 4
   {
   image_xscale -= 0.01;
   image_yscale = image_xscale;
   }
else
   {
   audio_play_sound(snd_explode,10,false);
   instance_destroy();
   }   

///Death on BlackHole
alarm[1] = room_speed/2
if !audio_is_playing(snd_blackhole) { audio_play_sound(snd_blackhole, 1, false) }

    


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_asteroid_l">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (place_meeting(x, y, obj_blackholebase))
    {
        exit;
    }

/// Reverse
motion_add(image_angle - 180, 0.2);
if (speed &gt; 3) speed = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (place_meeting(x, y, obj_blackholebase))
    {
        exit;
    }

image_angle = image_angle - 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (place_meeting(x, y, obj_blackholebase))
    {
        exit;
    }
if (speed &gt; 5) speed = 5;
if keyboard_check(vk_space)
    { 
        motion_add(image_angle, 5);
    }
if keyboard_check_pressed(vk_space)
    {
        audio_play_sound(snd_boost, 10, 0);
    }
if !keyboard_check(vk_space)
   {
       motion_add(image_angle, 0.2);
   }
if !keyboard_check(vk_up)
   {
          motion_add(image_angle, 0.2);
   }
if global.life =- 1
    {
        motion_add(image_angle, 0.2);
    }
if keyboard_check_pressed (vk_up)
    {
        audio_play_sound (snd_engine, 1, true);
    }
if keyboard_check_released (vk_up)
    {   
        audio_stop_sound (snd_engine); 
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (place_meeting(x, y, obj_blackholebase))
    {
        exit;
    }

///Turn Left
image_angle = image_angle + 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>112</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_wrap</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
